Release 12.4 - xst M.81d (lin64)
Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
--> 
Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.05 secs
 
--> 
Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.05 secs
 
--> 
Reading design: top.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Compilation
  3) Design Hierarchy Analysis
  4) HDL Analysis
  5) HDL Synthesis
     5.1) HDL Synthesis Report
  6) Advanced HDL Synthesis
     6.1) Advanced HDL Synthesis Report
  7) Low Level Synthesis
  8) Partition Report
  9) Final Report
	9.1) Device utilization summary
	9.2) Partition Resource Summary
	9.3) TIMING REPORT


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "top.prj"
Input Format                       : mixed
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "top"
Output Format                      : NGC
Target Device                      : xc3s1200e-4-fg320

---- Source Options
Top Module Name                    : top
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : Yes
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Mux Style                          : Auto
Decoder Extraction                 : YES
Priority Encoder Extraction        : Yes
Shift Register Extraction          : YES
Logical Shifter Extraction         : YES
XOR Collapsing                     : YES
ROM Style                          : Auto
Mux Extraction                     : Yes
Resource Sharing                   : NO
Asynchronous To Synchronous        : NO
Multiplier Style                   : Auto
Automatic Register Balancing       : YES

---- Target Options
Add IO Buffers                     : YES
Global Maximum Fanout              : 500
Add Generic Clock Buffer(BUFG)     : 24
Register Duplication               : YES
Move First FlipFlop Stage          : YES
Move Last FlipFlop Stage           : YES
Slice Packing                      : YES
Optimize Instantiated Primitives   : YES
Use Clock Enable                   : Yes
Use Synchronous Set                : Yes
Use Synchronous Reset              : Yes
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 2
Keep Hierarchy                     : Yes
Netlist Hierarchy                  : Rebuilt
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
Verilog 2001                       : YES
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

=========================================================================


=========================================================================
*                          HDL Compilation                              *
=========================================================================
Compiling verilog file "../../verilog/arbiter.v" in library work
Compiling verilog file "../../verilog/clock.v" in library work
Module <arbiter> compiled
Compiling verilog file "../../verilog/cpu_ex.v" in library work
Module <clock> compiled
Compiling verilog file "../../verilog/cpu_id.v" in library work
Module <cpu_ex> compiled
Compiling verilog file "../../verilog/cpu_if.v" in library work
Module <cpu_id> compiled
Compiling verilog file "../../verilog/cpu_mem.v" in library work
Module <cpu_if> compiled
Compiling verilog file "../../verilog/cpu.v" in library work
Module <cpu_mem> compiled
Compiling verilog file "../../verilog/cpu_wb.v" in library work
Module <cpu> compiled
Compiling verilog file "../../verilog/inferred_ram.v" in library work
Module <cpu_wb> compiled
Compiling verilog file "../../verilog/inferred_rom.v" in library work
Module <inferred_ram> compiled
Compiling verilog file "../../verilog/mm.v" in library work
Module <inferred_rom> compiled
Compiling verilog file "../../verilog/mod_gpio.v" in library work
Module <mm> compiled
Compiling verilog file "../../verilog/mod_leds.v" in library work
Module <mod_gpio> compiled
Compiling verilog file "../../verilog/mod_plpbot_uart.v" in library work
Module <mod_leds> compiled
Module <mod_plpbot_uart> compiled
Module <plpbot_uart_baud_generator> compiled
Compiling verilog file "../../verilog/mod_plpid.v" in library work
Module <plpbot_uart_core> compiled
Compiling verilog file "../../verilog/mod_rom.v" in library work
Module <mod_plpid> compiled
Compiling verilog file "../../verilog/mod_sram.v" in library work
Module <mod_rom> compiled
Module <mod_sram> compiled
Compiling verilog file "../../verilog/mod_sseg.v" in library work
Module <sram_interface> compiled
Compiling verilog file "../../verilog/mod_switches.v" in library work
Module <mod_sseg> compiled
Compiling verilog file "../../verilog/mod_timer.v" in library work
Module <mod_switches> compiled
Compiling verilog file "../../verilog/mod_uart.v" in library work
Module <mod_timer> compiled
Module <mod_uart> compiled
Module <uart_baud_generator> compiled
Compiling verilog file "../../verilog/mod_vga.v" in library work
Module <uart_core> compiled
Module <mod_vga> compiled
Module <vga_controller> compiled
Compiling verilog file "../../verilog/top.v" in library work
Module <vga_sram_bypass> compiled
Module <top> compiled
No errors in compilation
Analysis of file <"top.prj"> succeeded.
 

=========================================================================
*                     Design Hierarchy Analysis                         *
=========================================================================
Analyzing hierarchy for module <top> in library <work>.

Analyzing hierarchy for module <clock> in library <work>.

Analyzing hierarchy for module <cpu> in library <work>.

Analyzing hierarchy for module <arbiter> in library <work>.

Analyzing hierarchy for module <cpu_if> in library <work>.

Analyzing hierarchy for module <cpu_id> in library <work>.

Analyzing hierarchy for module <cpu_ex> in library <work>.

Analyzing hierarchy for module <cpu_mem> in library <work>.

Analyzing hierarchy for module <cpu_wb> in library <work>.

Analyzing hierarchy for module <mm> in library <work>.

Analyzing hierarchy for module <mod_rom> in library <work>.

Analyzing hierarchy for module <mod_sram> in library <work>.

Analyzing hierarchy for module <mod_uart> in library <work>.

Analyzing hierarchy for module <mod_switches> in library <work>.

Analyzing hierarchy for module <mod_leds> in library <work>.

Analyzing hierarchy for module <mod_vga> in library <work>.

Analyzing hierarchy for module <mod_plpid> in library <work> with parameters.
	board_freq = "00000001011111010111100001000000"
	cpu_id = "00000000000000000000001000000010"

Analyzing hierarchy for module <mod_timer> in library <work>.

Analyzing hierarchy for module <mod_sseg> in library <work> with parameters.
	CLOCK_FREQ = "00000001011111010111100001000000"
	TICKS = "00000000000000011001011011100110"

Analyzing hierarchy for module <mod_plpbot_uart> in library <work>.

Analyzing hierarchy for module <inferred_rom> in library <work>.

Analyzing hierarchy for module <sram_interface> in library <work>.

Analyzing hierarchy for module <uart_core> in library <work>.

Analyzing hierarchy for module <vga_controller> in library <work> with parameters.
	H_BACKPORCH = "00000000000000000000000000110000"
	H_FRONTPORCH = "00000000000000000000000000010000"
	H_PERIOD = "00000000000000000000001100100000"
	H_PULSEWIDTH = "00000000000000000000000001100000"
	V_BACKPORCH = "00000000000000000000000000011101"
	V_FRONTPORCH = "00000000000000000000000000001010"
	V_PERIOD = "00000000000000000000001000001001"
	V_PULSEWIDTH = "00000000000000000000000000000010"

Analyzing hierarchy for module <vga_sram_bypass> in library <work>.

Analyzing hierarchy for module <plpbot_uart_core> in library <work>.

Analyzing hierarchy for module <uart_baud_generator> in library <work> with parameters.
	b_rate = "00000000000000001110000100000000"
	c_rate = "00000001011111010111100001000000"
	divider = "00000000000000000000000110110010"
	divider16 = "00000000000000000000000000011011"

Analyzing hierarchy for module <plpbot_uart_baud_generator> in library <work> with parameters.
	b_rate = "00000000000000000010010110000000"
	c_rate = "00000001011111010111100001000000"
	divider = "00000000000000000000101000101100"
	divider16 = "00000000000000000000000010100010"


=========================================================================
*                            HDL Analysis                               *
=========================================================================
Analyzing top module <top>.
Module <top> is correct for synthesis.
 
Analyzing module <clock> in library <work>.
Module <clock> is correct for synthesis.
 
Analyzing module <cpu> in library <work>.
Module <cpu> is correct for synthesis.
 
Analyzing module <cpu_if> in library <work>.
WARNING:Xst:2326 - "../../verilog/cpu_if.v" line 68: Invalid escape sequence : %x.
WARNING:Xst:2326 - "../../verilog/cpu_if.v" line 68: Invalid escape sequence : %x.
WARNING:Xst:2323 - "../../verilog/cpu_if.v" line 68: Parameter 2 is not constant in call of system task $display.
WARNING:Xst:2323 - "../../verilog/cpu_if.v" line 68: Parameter 3 is not constant in call of system task $display.
"../../verilog/cpu_if.v" line 68: $display : IF: PC: %x INST: %x
Module <cpu_if> is correct for synthesis.
 
Analyzing module <cpu_id> in library <work>.
Module <cpu_id> is correct for synthesis.
 
Analyzing module <cpu_ex> in library <work>.
Module <cpu_ex> is correct for synthesis.
 
Analyzing module <cpu_mem> in library <work>.
Module <cpu_mem> is correct for synthesis.
 
Analyzing module <cpu_wb> in library <work>.
Module <cpu_wb> is correct for synthesis.
 
Analyzing module <arbiter> in library <work>.
Module <arbiter> is correct for synthesis.
 
Analyzing module <mm> in library <work>.
Module <mm> is correct for synthesis.
 
Analyzing module <mod_rom> in library <work>.
Module <mod_rom> is correct for synthesis.
 
Analyzing module <inferred_rom> in library <work>.
Module <inferred_rom> is correct for synthesis.
 
Analyzing module <mod_sram> in library <work>.
Module <mod_sram> is correct for synthesis.
 
Analyzing module <sram_interface> in library <work>.
Module <sram_interface> is correct for synthesis.
 
Analyzing module <mod_uart> in library <work>.
Module <mod_uart> is correct for synthesis.
 
Analyzing module <uart_core> in library <work>.
Module <uart_core> is correct for synthesis.
 
Analyzing module <uart_baud_generator> in library <work>.
	b_rate = 32'sb00000000000000001110000100000000
	c_rate = 32'sb00000001011111010111100001000000
	divider = 32'sb00000000000000000000000110110010
	divider16 = 32'sb00000000000000000000000000011011
Module <uart_baud_generator> is correct for synthesis.
 
Analyzing module <mod_switches> in library <work>.
Module <mod_switches> is correct for synthesis.
 
Analyzing module <mod_leds> in library <work>.
WARNING:Xst:2326 - "../../verilog/mod_leds.v" line 53: Invalid escape sequence : %x.
WARNING:Xst:2323 - "../../verilog/mod_leds.v" line 53: Parameter 2 is not constant in call of system task $display.
"../../verilog/mod_leds.v" line 53: $display : MOD_LEDS: %x
Module <mod_leds> is correct for synthesis.
 
Analyzing module <mod_vga> in library <work>.
Module <mod_vga> is correct for synthesis.
 
Analyzing module <vga_controller> in library <work>.
	H_BACKPORCH = 32'sb00000000000000000000000000110000
	H_FRONTPORCH = 32'sb00000000000000000000000000010000
	H_PERIOD = 32'sb00000000000000000000001100100000
	H_PULSEWIDTH = 32'sb00000000000000000000000001100000
	V_BACKPORCH = 32'sb00000000000000000000000000011101
	V_FRONTPORCH = 32'sb00000000000000000000000000001010
	V_PERIOD = 32'sb00000000000000000000001000001001
	V_PULSEWIDTH = 32'sb00000000000000000000000000000010
Module <vga_controller> is correct for synthesis.
 
Analyzing module <vga_sram_bypass> in library <work>.
INFO:Xst:1433 - Contents of array <buffer_0> may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
INFO:Xst:1433 - Contents of array <buffer_1> may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
INFO:Xst:1433 - Contents of array <buffer_2> may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
INFO:Xst:1433 - Contents of array <buffer_3> may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
INFO:Xst:1433 - Contents of array <buffer_0> may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
INFO:Xst:1433 - Contents of array <buffer_1> may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
INFO:Xst:1433 - Contents of array <buffer_2> may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
INFO:Xst:1433 - Contents of array <buffer_3> may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
Module <vga_sram_bypass> is correct for synthesis.
 
Analyzing module <mod_plpid> in library <work>.
	board_freq = 32'b00000001011111010111100001000000
	cpu_id = 32'b00000000000000000000001000000010
Module <mod_plpid> is correct for synthesis.
 
Analyzing module <mod_timer> in library <work>.
Module <mod_timer> is correct for synthesis.
 
Analyzing module <mod_sseg> in library <work>.
	CLOCK_FREQ = 32'sb00000001011111010111100001000000
	TICKS = 32'sb00000000000000011001011011100110
Module <mod_sseg> is correct for synthesis.
 
Analyzing module <mod_plpbot_uart> in library <work>.
Module <mod_plpbot_uart> is correct for synthesis.
 
Analyzing module <plpbot_uart_core> in library <work>.
Module <plpbot_uart_core> is correct for synthesis.
 
Analyzing module <plpbot_uart_baud_generator> in library <work>.
	b_rate = 32'sb00000000000000000010010110000000
	c_rate = 32'sb00000001011111010111100001000000
	divider = 32'sb00000000000000000000101000101100
	divider16 = 32'sb00000000000000000000000010100010
Module <plpbot_uart_baud_generator> is correct for synthesis.
 

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Performing bidirectional port resolution...

Synthesizing Unit <clock>.
    Related source file is "../../verilog/clock.v".
    Found 1-bit register for signal <count>.
    Summary:
	inferred   1 D-type flip-flop(s).
Unit <clock> synthesized.


Synthesizing Unit <cpu_if>.
    Related source file is "../../verilog/cpu_if.v".
    Found 32-bit register for signal <p_pc>.
    Found 32-bit register for signal <p_inst>.
    Found 32-bit adder for signal <next_pc$addsub0000> created at line 72.
    Found 32-bit 4-to-1 multiplexer for signal <p_inst$mux0000>.
    Found 32-bit 4-to-1 multiplexer for signal <p_pc$mux0000>.
    Found 32-bit register for signal <pc>.
    Summary:
	inferred  96 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
	inferred  64 Multiplexer(s).
Unit <cpu_if> synthesized.


Synthesizing Unit <cpu_id>.
    Related source file is "../../verilog/cpu_id.v".
    Found 31x32-bit dual-port RAM <Mram_rf> for signal <rf>.
    Found 31x32-bit dual-port RAM <Mram_rf_ren> for signal <rf>.
    Using one-hot encoding for signal <c_rd_rt_31>.
    Found 1-bit register for signal <p_c_b>.
    Found 1-bit register for signal <p_c_j>.
    Found 5-bit register for signal <p_shamt>.
    Found 5-bit register for signal <p_rf_waddr>.
    Found 1-bit register for signal <p_c_rfw>.
    Found 6-bit register for signal <p_c_alucontrol>.
    Found 1-bit register for signal <p_c_jjr>.
    Found 32-bit register for signal <p_rfa>.
    Found 32-bit register for signal <p_rfb>.
    Found 32-bit register for signal <p_pc>.
    Found 26-bit register for signal <p_jaddr>.
    Found 32-bit register for signal <p_se>.
    Found 5-bit register for signal <p_rs>.
    Found 5-bit register for signal <p_rt>.
    Found 6-bit register for signal <p_func>.
    Found 2-bit register for signal <p_c_wbsource>.
    Found 1-bit register for signal <p_c_drw>.
    Found 1-bit register for signal <p_c_rfbse>.
    Found 5-bit comparator equal for signal <stall$cmp_eq0001> created at line 73.
    Found 5-bit comparator equal for signal <stall$cmp_eq0002> created at line 73.
    Summary:
	inferred   2 RAM(s).
	inferred 194 D-type flip-flop(s).
	inferred   2 Comparator(s).
Unit <cpu_id> synthesized.


Synthesizing Unit <cpu_ex>.
    Related source file is "../../verilog/cpu_ex.v".
    Using one-hot encoding for signal <forwardX>.
    Using one-hot encoding for signal <forwardY>.
    Found 5-bit register for signal <p_rf_waddr>.
    Found 1-bit register for signal <p_c_rfw>.
    Found 32-bit register for signal <p_rfb>.
    Found 32-bit register for signal <p_alu_r>.
    Found 5-bit register for signal <p_rt>.
    Found 2-bit register for signal <p_c_wbsource>.
    Found 1-bit register for signal <p_c_drw>.
    Found 32-bit adder for signal <baddr>.
    Found 32-bit register for signal <p_jalra>.
    Found 32-bit adder for signal <alu_r$addsub0000> created at line 105.
    Found 32-bit subtractor for signal <alu_r$addsub0001> created at line 105.
    Found 32-bit comparator equal for signal <alu_r$cmp_eq0000> created at line 105.
    Found 32-bit comparator not equal for signal <alu_r$cmp_ne0000> created at line 105.
    Found 32-bit shifter logical left for signal <alu_r$shift0000> created at line 105.
    Found 32-bit shifter logical right for signal <alu_r$shift0001> created at line 105.
    Found 1-bit xor2 for signal <cmp_signed$xor0000> created at line 83.
    Found 32-bit comparator less for signal <cmp_unsigned>.
    Found 5-bit comparator equal for signal <forwardX$cmp_eq0000> created at line 71.
    Found 5-bit comparator equal for signal <forwardX$cmp_eq0001> created at line 71.
    Found 5-bit comparator equal for signal <forwardY$cmp_eq0000> created at line 73.
    Found 5-bit comparator equal for signal <forwardY$cmp_eq0001> created at line 73.
    Found 32-bit adder for signal <jalra>.
    Found 32-bit adder for signal <pc_4>.
    Summary:
	inferred 110 D-type flip-flop(s).
	inferred   5 Adder/Subtractor(s).
	inferred   7 Comparator(s).
	inferred   2 Combinational logic shifter(s).
Unit <cpu_ex> synthesized.


Synthesizing Unit <cpu_mem>.
    Related source file is "../../verilog/cpu_mem.v".
    Found 5-bit register for signal <p_rf_waddr>.
    Found 1-bit register for signal <p_c_rfw>.
    Found 32-bit register for signal <p_alu_r>.
    Found 2-bit register for signal <p_c_wbsource>.
    Found 32-bit register for signal <p_dout>.
    Found 32-bit register for signal <p_jalra>.
    Found 5-bit comparator equal for signal <forward$cmp_eq0000> created at line 58.
    Summary:
	inferred 104 D-type flip-flop(s).
	inferred   1 Comparator(s).
Unit <cpu_mem> synthesized.


Synthesizing Unit <cpu_wb>.
    Related source file is "../../verilog/cpu_wb.v".
    Found 32-bit 4-to-1 multiplexer for signal <wdata>.
    Summary:
	inferred  32 Multiplexer(s).
Unit <cpu_wb> synthesized.


Synthesizing Unit <mm>.
    Related source file is "../../verilog/mm.v".
    Found 16x8-bit ROM for signal <mod$mux0000>.
    Summary:
	inferred   1 ROM(s).
Unit <mm> synthesized.


Synthesizing Unit <mod_switches>.
    Related source file is "../../verilog/mod_switches.v".
WARNING:Xst:647 - Input <clk> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <din> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <de> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <rst> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <ie> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <daddr> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <drw> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <iaddr> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
Unit <mod_switches> synthesized.


Synthesizing Unit <mod_leds>.
    Related source file is "../../verilog/mod_leds.v".
WARNING:Xst:647 - Input <din<31:8>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <ie> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <daddr> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <iaddr> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 8-bit register for signal <leds>.
    Summary:
	inferred   8 D-type flip-flop(s).
Unit <mod_leds> synthesized.


Synthesizing Unit <mod_plpid>.
    Related source file is "../../verilog/mod_plpid.v".
WARNING:Xst:647 - Input <clk> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <din> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <de> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <rst> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <ie> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <drw> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <iaddr> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:653 - Signal <idata> is used but never assigned. This sourceless signal will be automatically connected to value 00000000000000000000000000000000.
Unit <mod_plpid> synthesized.


Synthesizing Unit <mod_timer>.
    Related source file is "../../verilog/mod_timer.v".
WARNING:Xst:647 - Input <ie> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <daddr> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <iaddr> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:653 - Signal <idata> is used but never assigned. This sourceless signal will be automatically connected to value 00000000000000000000000000000000.
    Found 32-bit up counter for signal <timer>.
    Summary:
	inferred   1 Counter(s).
Unit <mod_timer> synthesized.


Synthesizing Unit <mod_sseg>.
    Related source file is "../../verilog/mod_sseg.v".
WARNING:Xst:647 - Input <ie> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <daddr> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <iaddr> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 4-bit register for signal <sseg_an>.
    Found 32-bit register for signal <counter>.
    Found 32-bit register for signal <sseg>.
    Summary:
	inferred  68 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
	inferred  32 Multiplexer(s).
Unit <mod_sseg> synthesized.


Synthesizing Unit <inferred_rom>.
    Related source file is "../../verilog/inferred_rom.v".
WARNING:Xst:1781 - Signal <RAM> is used but never assigned. Tied to default value.
    Found 512x32-bit ROM for signal <$varindex0000> created at line 11.
    Found 512x32-bit ROM for signal <$varindex0001> created at line 17.
    Found 32-bit register for signal <doa>.
    Found 32-bit register for signal <dob>.
    Summary:
	inferred   2 ROM(s).
	inferred  64 D-type flip-flop(s).
Unit <inferred_rom> synthesized.


Synthesizing Unit <sram_interface>.
    Related source file is "../../verilog/mod_sram.v".
WARNING:Xst:647 - Input <addr<31:24>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <addr<1:0>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 16-bit tristate buffer for signal <sram_data>.
    Found 32-bit register for signal <dout>.
    Found 3-bit up counter for signal <state>.
    Summary:
	inferred   1 Counter(s).
	inferred  32 D-type flip-flop(s).
	inferred  16 Tristate(s).
Unit <sram_interface> synthesized.


Synthesizing Unit <uart_baud_generator>.
    Related source file is "../../verilog/mod_uart.v".
    Found 32-bit up counter for signal <count>.
    Found 32-bit up counter for signal <count16>.
    Found 32-bit adder for signal <old_count16_2$add0000> created at line 112.
    Found 32-bit adder for signal <old_count_1$add0000> created at line 111.
    Summary:
	inferred   2 Counter(s).
	inferred   2 Adder/Subtractor(s).
Unit <uart_baud_generator> synthesized.


Synthesizing Unit <vga_controller>.
    Related source file is "../../verilog/mod_vga.v".
    Found 11-bit register for signal <vcount>.
    Found 11-bit register for signal <hcount>.
    Found 1-bit register for signal <blank>.
    Found 11-bit comparator greatequal for signal <blank$cmp_ge0000> created at line 96.
    Found 11-bit comparator greatequal for signal <blank$cmp_ge0001> created at line 96.
    Found 11-bit comparator less for signal <blank$cmp_lt0000> created at line 96.
    Found 11-bit comparator less for signal <blank$cmp_lt0001> created at line 96.
    Found 11-bit subtractor for signal <hcount$addsub0000> created at line 111.
    Found 11-bit comparator greatequal for signal <hcount$cmp_ge0000> created at line 111.
    Found 11-bit comparator less for signal <hcount$cmp_lt0000> created at line 111.
    Found 11-bit subtractor for signal <hcount$sub0000> created at line 111.
    Found 11-bit register for signal <hcounter>.
    Found 11-bit comparator less for signal <hs$cmp_lt0000> created at line 83.
    Found 11-bit adder for signal <old_vcounter_7$addsub0000> created at line 108.
    Found 11-bit subtractor for signal <vcount$addsub0000> created at line 115.
    Found 11-bit comparator greatequal for signal <vcount$cmp_ge0000> created at line 115.
    Found 11-bit comparator less for signal <vcount$cmp_lt0000> created at line 115.
    Found 11-bit subtractor for signal <vcount$sub0000> created at line 115.
    Found 11-bit register for signal <vcounter>.
    Found 11-bit comparator less for signal <vs$cmp_lt0000> created at line 84.
    Summary:
	inferred  45 D-type flip-flop(s).
	inferred   6 Adder/Subtractor(s).
	inferred  10 Comparator(s).
Unit <vga_controller> synthesized.


Synthesizing Unit <vga_sram_bypass>.
    Related source file is "../../verilog/mod_vga.v".
    Found 160x8-bit dual-port RAM <Mram_buffer_0> for signal <buffer_0>.
    Found 160x8-bit dual-port RAM <Mram_buffer_1> for signal <buffer_1>.
    Found 160x8-bit dual-port RAM <Mram_buffer_2> for signal <buffer_2>.
    Found 160x8-bit dual-port RAM <Mram_buffer_3> for signal <buffer_3>.
    Found 32-bit adder for signal <sram_addr>.
    Found 8-bit 4-to-1 multiplexer for signal <rgb>.
    Found 10-bit up accumulator for signal <pos>.
    Found 32-bit adder for signal <sram_addr$addsub0000> created at line 149.
    Found 11x10-bit multiplier for signal <sram_addr$mult0000> created at line 149.
    Found 11-bit register for signal <vcount_current>.
    Found 11-bit comparator not equal for signal <vcount_current$cmp_ne0000> created at line 153.
    Summary:
	inferred   4 RAM(s).
	inferred   1 Accumulator(s).
	inferred  11 D-type flip-flop(s).
	inferred   2 Adder/Subtractor(s).
	inferred   1 Multiplier(s).
	inferred   1 Comparator(s).
	inferred   8 Multiplexer(s).
Unit <vga_sram_bypass> synthesized.


Synthesizing Unit <plpbot_uart_baud_generator>.
    Related source file is "../../verilog/mod_plpbot_uart.v".
    Found 32-bit up counter for signal <count>.
    Found 32-bit up counter for signal <count16>.
    Found 32-bit adder for signal <old_count16_13$add0000> created at line 112.
    Found 32-bit adder for signal <old_count_12$add0000> created at line 111.
    Summary:
	inferred   2 Counter(s).
	inferred   2 Adder/Subtractor(s).
Unit <plpbot_uart_baud_generator> synthesized.


Synthesizing Unit <cpu>.
    Related source file is "../../verilog/cpu.v".
Unit <cpu> synthesized.


Synthesizing Unit <mod_rom>.
    Related source file is "../../verilog/mod_rom.v".
WARNING:Xst:647 - Input <din> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <de> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <rst> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <ie> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <daddr<31:11>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <daddr<1:0>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <drw> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <iaddr<31:11>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <iaddr<1:0>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
Unit <mod_rom> synthesized.


Synthesizing Unit <mod_sram>.
    Related source file is "../../verilog/mod_sram.v".
    Found finite state machine <FSM_0> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 3                                              |
    | Transitions        | 12                                             |
    | Inputs             | 4                                              |
    | Outputs            | 4                                              |
    | Clock              | clk                       (falling_edge)       |
    | Reset              | rst                       (positive)           |
    | Reset type         | synchronous                                    |
    | Reset State        | 00                                             |
    | Power Up State     | 00                                             |
    | Recovery State     | 00                                             |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 1-bit register for signal <mod_vga_sram_rdy>.
    Found 1-bit register for signal <bypass_state>.
    Found 32-bit register for signal <ddata>.
    Found 32-bit register for signal <idata>.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  66 D-type flip-flop(s).
Unit <mod_sram> synthesized.


Synthesizing Unit <mod_vga>.
    Related source file is "../../verilog/mod_vga.v".
WARNING:Xst:647 - Input <ie> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <iaddr> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 1-bit register for signal <enable>.
    Found 32-bit register for signal <fb_pointer>.
    Summary:
	inferred  33 D-type flip-flop(s).
Unit <mod_vga> synthesized.


Synthesizing Unit <uart_core>.
    Related source file is "../../verilog/mod_uart.v".
WARNING:Xst - You have specified state <0001> as a recovery-only state for the safe implementation of FSM <txd_state>. Due to a limitation in this version of the software, the logic required to implement this recovery-only state might not be properly generated. Please refer to the Xilinx Answers Database for more details.
    Found finite state machine <FSM_1> for signal <rxd_state>.
    -----------------------------------------------------------------------
    | States             | 11                                             |
    | Transitions        | 23                                             |
    | Inputs             | 2                                              |
    | Outputs            | 19                                             |
    | Clock              | clk                       (falling_edge)       |
    | Clock enable       | baud16                    (positive)           |
    | Reset              | rst                       (positive)           |
    | Reset type         | synchronous                                    |
    | Reset State        | 0000                                           |
    | Recovery State     | 0000                                           |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_2> for signal <txd_state>.
    -----------------------------------------------------------------------
    | States             | 11                                             |
    | Transitions        | 11                                             |
    | Inputs             | 0                                              |
    | Outputs            | 11                                             |
    | Clock              | clk                       (falling_edge)       |
    | Clock enable       | baud                      (positive)           |
    | Reset              | send                      (positive)           |
    | Reset type         | synchronous                                    |
    | Reset State        | 0001                                           |
    | Recovery State     | 0001                                           |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 1-bit register for signal <data_rdy>.
    Found 8-bit register for signal <in_buffer>.
    Found 4-bit up counter for signal <baud16_space>.
    Summary:
	inferred   2 Finite State Machine(s).
	inferred   1 Counter(s).
	inferred   9 D-type flip-flop(s).
Unit <uart_core> synthesized.


Synthesizing Unit <plpbot_uart_core>.
    Related source file is "../../verilog/mod_plpbot_uart.v".
WARNING:Xst - You have specified state <0001> as a recovery-only state for the safe implementation of FSM <txd_state>. Due to a limitation in this version of the software, the logic required to implement this recovery-only state might not be properly generated. Please refer to the Xilinx Answers Database for more details.
    Found finite state machine <FSM_3> for signal <rxd_state>.
    -----------------------------------------------------------------------
    | States             | 11                                             |
    | Transitions        | 23                                             |
    | Inputs             | 2                                              |
    | Outputs            | 19                                             |
    | Clock              | clk                       (falling_edge)       |
    | Clock enable       | baud16                    (positive)           |
    | Reset              | rst                       (positive)           |
    | Reset type         | synchronous                                    |
    | Reset State        | 0000                                           |
    | Recovery State     | 0000                                           |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found finite state machine <FSM_4> for signal <txd_state>.
    -----------------------------------------------------------------------
    | States             | 11                                             |
    | Transitions        | 11                                             |
    | Inputs             | 0                                              |
    | Outputs            | 11                                             |
    | Clock              | clk                       (falling_edge)       |
    | Clock enable       | baud                      (positive)           |
    | Reset              | send                      (positive)           |
    | Reset type         | synchronous                                    |
    | Reset State        | 0001                                           |
    | Recovery State     | 0001                                           |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 1-bit register for signal <data_rdy>.
    Found 8-bit register for signal <in_buffer>.
    Found 4-bit up counter for signal <baud16_space>.
    Summary:
	inferred   2 Finite State Machine(s).
	inferred   1 Counter(s).
	inferred   9 D-type flip-flop(s).
Unit <plpbot_uart_core> synthesized.


Synthesizing Unit <mod_uart>.
    Related source file is "../../verilog/mod_uart.v".
WARNING:Xst:647 - Input <din<31:8>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <ie> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <iaddr> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 8-bit register for signal <out_buffer>.
    Summary:
	inferred   8 D-type flip-flop(s).
Unit <mod_uart> synthesized.


Synthesizing Unit <mod_plpbot_uart>.
    Related source file is "../../verilog/mod_plpbot_uart.v".
WARNING:Xst:647 - Input <din<31:8>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <ie> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <iaddr> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 8-bit register for signal <out_buffer>.
    Summary:
	inferred   8 D-type flip-flop(s).
Unit <mod_plpbot_uart> synthesized.


Synthesizing Unit <arbiter>.
    Related source file is "../../verilog/arbiter.v".
Unit <arbiter> synthesized.


Synthesizing Unit <top>.
    Related source file is "../../verilog/top.v".
WARNING:Xst:1780 - Signal <cpu_c> is never used or assigned. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:1780 - Signal <arbiter_c> is never used or assigned. This unconnected signal will be trimmed during the optimization process.
Unit <top> synthesized.


=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 6
 160x8-bit dual-port RAM                               : 4
 31x32-bit dual-port RAM                               : 2
# ROMs                                                 : 4
 16x8-bit ROM                                          : 2
 512x32-bit ROM                                        : 2
# Multipliers                                          : 1
 11x10-bit multiplier                                  : 1
# Adders/Subtractors                                   : 21
 11-bit adder                                          : 2
 11-bit subtractor                                     : 4
 32-bit adder                                          : 14
 32-bit subtractor                                     : 1
# Counters                                             : 11
 3-bit up counter                                      : 1
 32-bit up counter                                     : 7
 4-bit up counter                                      : 3
# Accumulators                                         : 1
 10-bit up accumulator                                 : 1
# Registers                                            : 116
 1-bit register                                        : 73
 11-bit register                                       : 5
 2-bit register                                        : 3
 26-bit register                                       : 1
 32-bit register                                       : 20
 4-bit register                                        : 1
 5-bit register                                        : 7
 6-bit register                                        : 2
 8-bit register                                        : 4
# Comparators                                          : 21
 11-bit comparator greatequal                          : 4
 11-bit comparator less                                : 6
 11-bit comparator not equal                           : 1
 32-bit comparator equal                               : 1
 32-bit comparator less                                : 1
 32-bit comparator not equal                           : 1
 5-bit comparator equal                                : 7
# Multiplexers                                         : 5
 32-bit 4-to-1 multiplexer                             : 4
 8-bit 4-to-1 multiplexer                              : 1
# Logic shifters                                       : 2
 32-bit shifter logical left                           : 1
 32-bit shifter logical right                          : 1
# Tristates                                            : 1
 16-bit tristate buffer                                : 1
# Xors                                                 : 1
 1-bit xor2                                            : 1

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

Analyzing FSM <FSM_4> for best encoding.
Optimizing FSM <arbiter_t/plpbot_uart_t_0/uart/txd_state/FSM> on signal <txd_state[1:4]> with sequential encoding.
Optimizing FSM <arbiter_t/plpbot_uart_t_1/uart/txd_state/FSM> on signal <txd_state[1:4]> with sequential encoding.
-------------------
 State | Encoding
-------------------
 0000  | 1010
 0001  | 0000
 0010  | 0001
 0011  | 0010
 0100  | 0011
 0101  | 0100
 0110  | 0101
 0111  | 0110
 1000  | 0111
 1001  | 1000
 1010  | 1001
-------------------
Analyzing FSM <FSM_3> for best encoding.
Optimizing FSM <arbiter_t/plpbot_uart_t_0/uart/rxd_state/FSM> on signal <rxd_state[1:4]> with user encoding.
Optimizing FSM <arbiter_t/plpbot_uart_t_1/uart/rxd_state/FSM> on signal <rxd_state[1:4]> with user encoding.
-------------------
 State | Encoding
-------------------
 0000  | 0000
 0001  | 0001
 0010  | 0010
 0011  | 0011
 0100  | 0100
 0101  | 0101
 0110  | 0110
 0111  | 0111
 1000  | 1000
 1001  | 1001
 1010  | 1010
-------------------
Analyzing FSM <FSM_2> for best encoding.
Optimizing FSM <arbiter_t/uart_t/uart/txd_state/FSM> on signal <txd_state[1:4]> with sequential encoding.
-------------------
 State | Encoding
-------------------
 0000  | 1010
 0001  | 0000
 0010  | 0001
 0011  | 0010
 0100  | 0011
 0101  | 0100
 0110  | 0101
 0111  | 0110
 1000  | 0111
 1001  | 1000
 1010  | 1001
-------------------
Analyzing FSM <FSM_1> for best encoding.
Optimizing FSM <arbiter_t/uart_t/uart/rxd_state/FSM> on signal <rxd_state[1:4]> with user encoding.
-------------------
 State | Encoding
-------------------
 0000  | 0000
 0001  | 0001
 0010  | 0010
 0011  | 0011
 0100  | 0100
 0101  | 0101
 0110  | 0110
 0111  | 0111
 1000  | 1000
 1001  | 1001
 1010  | 1010
-------------------
Analyzing FSM <FSM_0> for best encoding.
Optimizing FSM <arbiter_t/ram_t/state/FSM> on signal <state[1:2]> with sequential encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 10    | 01
 11    | 10
-------------------
INFO:Xst:2261 - The FF/Latch <p_func_5> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_5> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_25> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_rs_4> 
INFO:Xst:2261 - The FF/Latch <p_func_4> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_4> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_24> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_rs_3> 
INFO:Xst:2261 - The FF/Latch <p_func_3> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_3> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_23> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_rs_2> 
INFO:Xst:2261 - The FF/Latch <p_func_2> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_2> 
INFO:Xst:2261 - The FF/Latch <p_se_16> in Unit <stage_id> is equivalent to the following 15 FFs/Latches, which will be removed : <p_se_17> <p_se_18> <p_se_19> <p_se_20> <p_se_21> <p_se_22> <p_se_23> <p_se_24> <p_se_25> <p_se_26> <p_se_27> <p_se_28> <p_se_29> <p_se_30> <p_se_31> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_22> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_rs_1> 
INFO:Xst:2261 - The FF/Latch <p_func_1> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_1> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_21> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_rs_0> 
INFO:Xst:2261 - The FF/Latch <p_func_0> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_0> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_20> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_rt_4> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_19> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_rt_3> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_18> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_rt_2> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_17> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_rt_1> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_16> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_rt_0> 
INFO:Xst:2261 - The FF/Latch <p_shamt_4> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_10> 
INFO:Xst:2261 - The FF/Latch <p_shamt_3> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_9> 
INFO:Xst:2261 - The FF/Latch <p_shamt_2> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_8> 
INFO:Xst:2261 - The FF/Latch <p_shamt_1> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_7> 
INFO:Xst:2261 - The FF/Latch <p_shamt_0> in Unit <stage_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_6> 
WARNING:Xst:1710 - FF/Latch <in_buffer_0> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_1> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_2> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_5> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_3> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_4> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_6> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_7> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:2677 - Node <hcount_10> of sequential type is unconnected in block <vga>.

Synthesizing (advanced) Unit <cpu_id>.
INFO:Xst:3031 - HDL ADVISOR - The RAM <Mram_rf> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 31-word x 32-bit                    |          |
    |     clkA           | connected to signal <clk>           | fall     |
    |     weA            | connected to signal <_and0000_0>    | high     |
    |     addrA          | connected to signal <wb_rf_waddr>   |          |
    |     diA            | connected to signal <wb_rf_wdata>   |          |
    -----------------------------------------------------------------------
    | Port B                                                              |
    |     aspect ratio   | 31-word x 32-bit                    |          |
    |     addrB          | connected to signal <if_inst>       |          |
    |     doB            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3031 - HDL ADVISOR - The RAM <Mram_rf_ren> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 31-word x 32-bit                    |          |
    |     clkA           | connected to signal <clk>           | fall     |
    |     weA            | connected to signal <_and0000_1>    | high     |
    |     addrA          | connected to signal <wb_rf_waddr>   |          |
    |     diA            | connected to signal <wb_rf_wdata>   |          |
    -----------------------------------------------------------------------
    | Port B                                                              |
    |     aspect ratio   | 31-word x 32-bit                    |          |
    |     addrB          | connected to signal <if_inst>       |          |
    |     doB            | connected to internal node          |          |
    -----------------------------------------------------------------------
Unit <cpu_id> synthesized (advanced).

Synthesizing (advanced) Unit <inferred_rom>.
INFO:Xst:3044 - The ROM <Mrom__varindex0000> will be implemented as a read-only BLOCK RAM, absorbing the register: <doa>.
INFO:Xst:3044 - The ROM <Mrom__varindex0001> will be implemented as a read-only BLOCK RAM, absorbing the register: <dob>.
INFO:Xst:3039 - The RAM <Mrom__varindex0000> will be implemented as BLOCK RAM
    -----------------------------------------------------------------------
    | ram_type           | Block                               |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 32-bit                   |          |
    |     mode           | write-first                         |          |
    |     clkA           | connected to signal <clka>          | fall     |
    |     weA            | connected to internal node          | high     |
    |     addrA          | connected to signal <addra>         |          |
    |     diA            | connected to internal node          |          |
    |     doA            | connected to signal <doa>           |          |
    -----------------------------------------------------------------------
    | optimization       | speed                               |          |
    -----------------------------------------------------------------------
INFO:Xst:3039 - The RAM <Mrom__varindex0001> will be implemented as BLOCK RAM
    -----------------------------------------------------------------------
    | ram_type           | Block                               |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 512-word x 32-bit                   |          |
    |     mode           | write-first                         |          |
    |     clkA           | connected to signal <clkb>          | fall     |
    |     weA            | connected to internal node          | high     |
    |     addrA          | connected to signal <addrb>         |          |
    |     diA            | connected to internal node          |          |
    |     doA            | connected to signal <dob>           |          |
    -----------------------------------------------------------------------
    | optimization       | speed                               |          |
    -----------------------------------------------------------------------
Unit <inferred_rom> synthesized (advanced).

Synthesizing (advanced) Unit <vga_sram_bypass>.
	Found pipelined multiplier on signal <sram_addr_mult0000>:
		- 1 pipeline level(s) found in a register on signal <vcount_current>.
		Pushing register(s) into the multiplier macro.
INFO:Xst:3031 - HDL ADVISOR - The RAM <Mram_buffer_0> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 160-word x 8-bit                    |          |
    |     clkA           | connected to signal <clk>           | rise     |
    |     weA            | connected to signal <_and0000>      | high     |
    |     addrA          | connected to signal <pos>           |          |
    |     diA            | connected to signal <sram_data>     |          |
    -----------------------------------------------------------------------
    | Port B                                                              |
    |     aspect ratio   | 160-word x 8-bit                    |          |
    |     addrB          | connected to signal <hcount>        |          |
    |     doB            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3031 - HDL ADVISOR - The RAM <Mram_buffer_1> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 160-word x 8-bit                    |          |
    |     clkA           | connected to signal <clk>           | rise     |
    |     weA            | connected to signal <_and0000>      | high     |
    |     addrA          | connected to signal <pos>           |          |
    |     diA            | connected to signal <sram_data>     |          |
    -----------------------------------------------------------------------
    | Port B                                                              |
    |     aspect ratio   | 160-word x 8-bit                    |          |
    |     addrB          | connected to signal <hcount>        |          |
    |     doB            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3031 - HDL ADVISOR - The RAM <Mram_buffer_2> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 160-word x 8-bit                    |          |
    |     clkA           | connected to signal <clk>           | rise     |
    |     weA            | connected to signal <_and0000>      | high     |
    |     addrA          | connected to signal <pos>           |          |
    |     diA            | connected to signal <sram_data>     |          |
    -----------------------------------------------------------------------
    | Port B                                                              |
    |     aspect ratio   | 160-word x 8-bit                    |          |
    |     addrB          | connected to signal <hcount>        |          |
    |     doB            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:3031 - HDL ADVISOR - The RAM <Mram_buffer_3> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 160-word x 8-bit                    |          |
    |     clkA           | connected to signal <clk>           | rise     |
    |     weA            | connected to signal <_and0000>      | high     |
    |     addrA          | connected to signal <pos>           |          |
    |     diA            | connected to signal <sram_data>     |          |
    -----------------------------------------------------------------------
    | Port B                                                              |
    |     aspect ratio   | 160-word x 8-bit                    |          |
    |     addrB          | connected to signal <hcount>        |          |
    |     doB            | connected to internal node          |          |
    -----------------------------------------------------------------------
INFO:Xst:2385 - HDL ADVISOR - You can improve the performance of the multiplier Mmult_sram_addr_mult0000 by adding 1 register level(s).
Unit <vga_sram_bypass> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# FSMs                                                 : 5
# RAMs                                                 : 8
 160x8-bit dual-port distributed RAM                   : 4
 31x32-bit dual-port distributed RAM                   : 2
 512x32-bit single-port block RAM                      : 2
# ROMs                                                 : 2
 16x8-bit ROM                                          : 2
# Multipliers                                          : 1
 11x10-bit registered multiplier                       : 1
# Adders/Subtractors                                   : 21
 11-bit adder                                          : 2
 11-bit subtractor                                     : 4
 32-bit adder                                          : 14
 32-bit subtractor                                     : 1
# Counters                                             : 11
 3-bit up counter                                      : 1
 32-bit up counter                                     : 7
 4-bit up counter                                      : 3
# Accumulators                                         : 1
 10-bit up accumulator                                 : 1
# Registers                                            : 819
 Flip-Flops                                            : 819
# Comparators                                          : 21
 11-bit comparator greatequal                          : 4
 11-bit comparator less                                : 6
 11-bit comparator not equal                           : 1
 32-bit comparator equal                               : 1
 32-bit comparator less                                : 1
 32-bit comparator not equal                           : 1
 5-bit comparator equal                                : 7
# Multiplexers                                         : 5
 32-bit 4-to-1 multiplexer                             : 4
 8-bit 4-to-1 multiplexer                              : 1
# Logic shifters                                       : 2
 32-bit shifter logical left                           : 1
 32-bit shifter logical right                          : 1
# Xors                                                 : 1
 1-bit xor2                                            : 1

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
INFO:Xst:2261 - The FF/Latch <p_func_5> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_5> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_25> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_rs_4> 
INFO:Xst:2261 - The FF/Latch <p_func_4> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_4> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_24> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_rs_3> 
INFO:Xst:2261 - The FF/Latch <p_func_3> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_3> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_23> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_rs_2> 
INFO:Xst:2261 - The FF/Latch <p_func_2> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_2> 
INFO:Xst:2261 - The FF/Latch <p_se_16> in Unit <cpu_id> is equivalent to the following 15 FFs/Latches, which will be removed : <p_se_17> <p_se_18> <p_se_19> <p_se_20> <p_se_21> <p_se_22> <p_se_23> <p_se_24> <p_se_25> <p_se_26> <p_se_27> <p_se_28> <p_se_29> <p_se_30> <p_se_31> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_22> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_rs_1> 
INFO:Xst:2261 - The FF/Latch <p_func_1> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_1> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_21> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_rs_0> 
INFO:Xst:2261 - The FF/Latch <p_func_0> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_0> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_20> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_rt_4> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_19> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_rt_3> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_18> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_rt_2> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_17> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_rt_1> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_16> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_rt_0> 
INFO:Xst:2261 - The FF/Latch <p_shamt_4> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_10> 
INFO:Xst:2261 - The FF/Latch <p_shamt_3> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_9> 
INFO:Xst:2261 - The FF/Latch <p_shamt_2> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_8> 
INFO:Xst:2261 - The FF/Latch <p_shamt_1> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_7> 
INFO:Xst:2261 - The FF/Latch <p_shamt_0> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_jaddr_6> 
INFO:Xst:2697 - Unit <inferred_rom> : the RAMs <Mrom__varindex0000>, <Mrom__varindex0001> are packed into the single block RAM <Mrom__varindex00001>
WARNING:Xst:1293 - FF/Latch <pos_0> has a constant value of 0 in block <vga_sram_bypass>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1896 - Due to other FF/Latch trimming, FF/Latch <pos_1> has a constant value of 0 in block <vga_sram_bypass>. This FF/Latch will be trimmed during the optimization process.

Optimizing unit <top> ...

Optimizing unit <mod_switches> ...

Optimizing unit <mod_plpid> ...

Optimizing unit <clock> ...

Optimizing unit <cpu_if> ...

Optimizing unit <cpu_id> ...
INFO:Xst:2261 - The FF/Latch <p_func_5> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_5> 
INFO:Xst:2261 - The FF/Latch <p_func_4> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_4> 
INFO:Xst:2261 - The FF/Latch <p_func_3> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_3> 
INFO:Xst:2261 - The FF/Latch <p_func_2> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_2> 
INFO:Xst:2261 - The FF/Latch <p_func_1> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_1> 
INFO:Xst:2261 - The FF/Latch <p_func_0> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_0> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_15> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_15> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_14> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_14> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_13> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_13> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_12> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_12> 
INFO:Xst:2261 - The FF/Latch <p_jaddr_11> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_11> 
INFO:Xst:2261 - The FF/Latch <p_shamt_4> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_10> 
INFO:Xst:2261 - The FF/Latch <p_shamt_3> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_9> 
INFO:Xst:2261 - The FF/Latch <p_shamt_2> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_8> 
INFO:Xst:2261 - The FF/Latch <p_shamt_1> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_7> 
INFO:Xst:2261 - The FF/Latch <p_shamt_0> in Unit <cpu_id> is equivalent to the following FF/Latch, which will be removed : <p_se_6> 

Optimizing unit <cpu_ex> ...

Optimizing unit <cpu_mem> ...

Optimizing unit <cpu_wb> ...

Optimizing unit <mm> ...

Optimizing unit <mod_leds> ...

Optimizing unit <mod_timer> ...

Optimizing unit <mod_sseg> ...

Optimizing unit <inferred_rom> ...

Optimizing unit <sram_interface> ...

Optimizing unit <uart_baud_generator> ...

Optimizing unit <vga_controller> ...

Optimizing unit <vga_sram_bypass> ...

Optimizing unit <plpbot_uart_baud_generator> ...

Optimizing unit <cpu> ...

Optimizing unit <mod_rom> ...

Optimizing unit <mod_sram> ...

Optimizing unit <mod_vga> ...

Optimizing unit <uart_core> ...

Optimizing unit <plpbot_uart_core> ...

Optimizing unit <mod_uart> ...

Optimizing unit <mod_plpbot_uart> ...

Optimizing unit <arbiter> ...
WARNING:Xst:1710 - FF/Latch <in_buffer_1> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_0> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_4> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_2> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_3> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_7> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_5> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1710 - FF/Latch <in_buffer_6> (without init value) has a constant value of 1 in block <uart>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:2677 - Node <hcount_10> of sequential type is unconnected in block <vga>.

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 5) on block top, actual ratio is 26.

Pipelining and Register Balancing Report ...

Processing Unit <arbiter_t/timer_t> :
	Register(s) timer_0 has(ve) been backward balanced into : timer_0_BRB0 timer_0_BRB1 timer_0_BRB2.
	Register(s) timer_1 has(ve) been backward balanced into : timer_1_BRB1 timer_1_BRB2.
	Register(s) timer_10 has(ve) been backward balanced into : timer_10_BRB1 timer_10_BRB2.
	Register(s) timer_11 has(ve) been backward balanced into : timer_11_BRB1 timer_11_BRB2.
	Register(s) timer_12 has(ve) been backward balanced into : timer_12_BRB1 timer_12_BRB2.
	Register(s) timer_13 has(ve) been backward balanced into : timer_13_BRB1 timer_13_BRB2.
	Register(s) timer_14 has(ve) been backward balanced into : timer_14_BRB1 timer_14_BRB2.
	Register(s) timer_15 has(ve) been backward balanced into : timer_15_BRB1 timer_15_BRB2.
	Register(s) timer_16 has(ve) been backward balanced into : timer_16_BRB1 timer_16_BRB2.
	Register(s) timer_17 has(ve) been backward balanced into : timer_17_BRB1 timer_17_BRB2.
	Register(s) timer_18 has(ve) been backward balanced into : timer_18_BRB1 timer_18_BRB2.
	Register(s) timer_19 has(ve) been backward balanced into : timer_19_BRB1 timer_19_BRB2.
	Register(s) timer_20 has(ve) been backward balanced into : timer_20_BRB1 timer_20_BRB2.
	Register(s) timer_21 has(ve) been backward balanced into : timer_21_BRB1 timer_21_BRB2.
	Register(s) timer_22 has(ve) been backward balanced into : timer_22_BRB1 timer_22_BRB2.
	Register(s) timer_23 has(ve) been backward balanced into : timer_23_BRB1 timer_23_BRB2.
	Register(s) timer_24 has(ve) been backward balanced into : timer_24_BRB1 timer_24_BRB2.
	Register(s) timer_25 has(ve) been backward balanced into : timer_25_BRB1 timer_25_BRB2.
	Register(s) timer_26 has(ve) been backward balanced into : timer_26_BRB1 timer_26_BRB2.
	Register(s) timer_27 has(ve) been backward balanced into : timer_27_BRB1 timer_27_BRB2.
	Register(s) timer_28 has(ve) been backward balanced into : timer_28_BRB1 timer_28_BRB2.
	Register(s) timer_29 has(ve) been backward balanced into : timer_29_BRB1 timer_29_BRB2.
	Register(s) timer_30 has(ve) been backward balanced into : timer_30_BRB1 timer_30_BRB2.
	Register(s) timer_31 has(ve) been backward balanced into : timer_31_BRB1 timer_31_BRB2.
	Register(s) timer_8 has(ve) been backward balanced into : timer_8_BRB1 timer_8_BRB2.
	Register(s) timer_9 has(ve) been backward balanced into : timer_9_BRB1 timer_9_BRB2.
Unit <arbiter_t/timer_t> processed.

Processing Unit <arbiter_t/ram_t> :
	Register(s) state_FSM_FFd1 has(ve) been backward balanced into : state_FSM_FFd1_BRB0 state_FSM_FFd1_BRB1 state_FSM_FFd1_BRB3 state_FSM_FFd1_BRB6 state_FSM_FFd1_BRB7.
	Register(s) state_FSM_FFd2 has(ve) been backward balanced into : state_FSM_FFd2_BRB0 state_FSM_FFd2_BRB1 state_FSM_FFd2_BRB2 state_FSM_FFd2_BRB3.
Unit <arbiter_t/ram_t> processed.

Processing Unit <cpu_t/stage_mem> :
	Register(s) p_rf_waddr_1 p_rf_waddr_4 p_rf_waddr_0 forward1_FRB has(ve) been forward balanced into : forward6_FRB.
Unit <cpu_t/stage_mem> processed.

Processing Unit <arbiter_t/sseg_t> :
	Register(s) sseg_0 has(ve) been backward balanced into : sseg_0_BRB0 sseg_0_BRB1.
	Register(s) sseg_1 has(ve) been backward balanced into : sseg_1_BRB1.
	Register(s) sseg_10 has(ve) been backward balanced into : sseg_10_BRB1.
	Register(s) sseg_11 has(ve) been backward balanced into : sseg_11_BRB1.
	Register(s) sseg_12 has(ve) been backward balanced into : sseg_12_BRB1.
	Register(s) sseg_13 has(ve) been backward balanced into : sseg_13_BRB1.
	Register(s) sseg_14 has(ve) been backward balanced into : sseg_14_BRB1.
	Register(s) sseg_15 has(ve) been backward balanced into : sseg_15_BRB1.
	Register(s) sseg_16 has(ve) been backward balanced into : sseg_16_BRB1.
	Register(s) sseg_17 has(ve) been backward balanced into : sseg_17_BRB1.
	Register(s) sseg_18 has(ve) been backward balanced into : sseg_18_BRB1.
	Register(s) sseg_19 has(ve) been backward balanced into : sseg_19_BRB1.
	Register(s) sseg_20 has(ve) been backward balanced into : sseg_20_BRB1.
	Register(s) sseg_21 has(ve) been backward balanced into : sseg_21_BRB1.
	Register(s) sseg_22 has(ve) been backward balanced into : sseg_22_BRB1.
	Register(s) sseg_23 has(ve) been backward balanced into : sseg_23_BRB1.
	Register(s) sseg_24 has(ve) been backward balanced into : sseg_24_BRB1.
	Register(s) sseg_25 has(ve) been backward balanced into : sseg_25_BRB1.
	Register(s) sseg_26 has(ve) been backward balanced into : sseg_26_BRB1.
	Register(s) sseg_27 has(ve) been backward balanced into : sseg_27_BRB1.
	Register(s) sseg_28 has(ve) been backward balanced into : sseg_28_BRB1.
	Register(s) sseg_29 has(ve) been backward balanced into : sseg_29_BRB1.
	Register(s) sseg_30 has(ve) been backward balanced into : sseg_30_BRB1.
	Register(s) sseg_31 has(ve) been backward balanced into : sseg_31_BRB1.
	Register(s) sseg_8 has(ve) been backward balanced into : sseg_8_BRB1.
	Register(s) sseg_9 has(ve) been backward balanced into : sseg_9_BRB1.
Unit <arbiter_t/sseg_t> processed.

Processing Unit <cpu_t/stage_if> :
	Register(s) p_inst_0 has(ve) been backward balanced into : p_inst_0_BRB0 p_inst_0_BRB4 p_inst_0_BRB5.
	Register(s) p_inst_1 has(ve) been backward balanced into : p_inst_1_BRB0 .
	Register(s) p_inst_10 has(ve) been backward balanced into : p_inst_10_BRB0 .
	Register(s) p_inst_11 has(ve) been backward balanced into : p_inst_11_BRB0 .
	Register(s) p_inst_12 has(ve) been backward balanced into : p_inst_12_BRB0 .
	Register(s) p_inst_13 has(ve) been backward balanced into : p_inst_13_BRB0 .
	Register(s) p_inst_14 has(ve) been backward balanced into : p_inst_14_BRB0 .
	Register(s) p_inst_15 has(ve) been backward balanced into : p_inst_15_BRB0 .
	Register(s) p_inst_16 has(ve) been backward balanced into : p_inst_16_BRB0 .
	Register(s) p_inst_17 has(ve) been backward balanced into : p_inst_17_BRB0 .
	Register(s) p_inst_18 has(ve) been backward balanced into : p_inst_18_BRB0 .
	Register(s) p_inst_19 has(ve) been backward balanced into : p_inst_19_BRB0 .
	Register(s) p_inst_2 has(ve) been backward balanced into : p_inst_2_BRB0 .
	Register(s) p_inst_20 has(ve) been backward balanced into : p_inst_20_BRB0 .
	Register(s) p_inst_21 has(ve) been backward balanced into : p_inst_21_BRB0 .
	Register(s) p_inst_22 has(ve) been backward balanced into : p_inst_22_BRB0 .
	Register(s) p_inst_23 has(ve) been backward balanced into : p_inst_23_BRB0 .
	Register(s) p_inst_24 has(ve) been backward balanced into : p_inst_24_BRB0 .
	Register(s) p_inst_25 has(ve) been backward balanced into : p_inst_25_BRB0 .
	Register(s) p_inst_26 has(ve) been backward balanced into : p_inst_26_BRB0 .
	Register(s) p_inst_27 has(ve) been backward balanced into : p_inst_27_BRB0 .
	Register(s) p_inst_28 has(ve) been backward balanced into : p_inst_28_BRB0 .
	Register(s) p_inst_29 has(ve) been backward balanced into : p_inst_29_BRB0 .
	Register(s) p_inst_3 has(ve) been backward balanced into : p_inst_3_BRB0 .
	Register(s) p_inst_30 has(ve) been backward balanced into : p_inst_30_BRB0 .
	Register(s) p_inst_31 has(ve) been backward balanced into : p_inst_31_BRB0 .
	Register(s) p_inst_4 has(ve) been backward balanced into : p_inst_4_BRB0 .
	Register(s) p_inst_5 has(ve) been backward balanced into : p_inst_5_BRB0 .
	Register(s) p_inst_6 has(ve) been backward balanced into : p_inst_6_BRB0 .
	Register(s) p_inst_7 has(ve) been backward balanced into : p_inst_7_BRB0 .
	Register(s) p_inst_8 has(ve) been backward balanced into : p_inst_8_BRB0 .
	Register(s) p_inst_9 has(ve) been backward balanced into : p_inst_9_BRB0 .
	Register(s) p_pc_0 has(ve) been backward balanced into : p_pc_0_BRB0 .
	Register(s) p_pc_1 has(ve) been backward balanced into : p_pc_1_BRB0 .
	Register(s) p_pc_10 has(ve) been backward balanced into : p_pc_10_BRB0 .
	Register(s) p_pc_11 has(ve) been backward balanced into : p_pc_11_BRB0 .
	Register(s) p_pc_12 has(ve) been backward balanced into : p_pc_12_BRB0 .
	Register(s) p_pc_13 has(ve) been backward balanced into : p_pc_13_BRB0 .
	Register(s) p_pc_14 has(ve) been backward balanced into : p_pc_14_BRB0 .
	Register(s) p_pc_15 has(ve) been backward balanced into : p_pc_15_BRB0 .
	Register(s) p_pc_16 has(ve) been backward balanced into : p_pc_16_BRB0 .
	Register(s) p_pc_17 has(ve) been backward balanced into : p_pc_17_BRB0 .
	Register(s) p_pc_18 has(ve) been backward balanced into : p_pc_18_BRB0 .
	Register(s) p_pc_19 has(ve) been backward balanced into : p_pc_19_BRB0 .
	Register(s) p_pc_2 has(ve) been backward balanced into : p_pc_2_BRB0 .
	Register(s) p_pc_20 has(ve) been backward balanced into : p_pc_20_BRB0 .
	Register(s) p_pc_21 has(ve) been backward balanced into : p_pc_21_BRB0 .
	Register(s) p_pc_22 has(ve) been backward balanced into : p_pc_22_BRB0 .
	Register(s) p_pc_23 has(ve) been backward balanced into : p_pc_23_BRB0 .
	Register(s) p_pc_24 has(ve) been backward balanced into : p_pc_24_BRB0 .
	Register(s) p_pc_25 has(ve) been backward balanced into : p_pc_25_BRB0 .
	Register(s) p_pc_26 has(ve) been backward balanced into : p_pc_26_BRB0 .
	Register(s) p_pc_27 has(ve) been backward balanced into : p_pc_27_BRB0 .
	Register(s) p_pc_28 has(ve) been backward balanced into : p_pc_28_BRB0 .
	Register(s) p_pc_29 has(ve) been backward balanced into : p_pc_29_BRB0 .
	Register(s) p_pc_3 has(ve) been backward balanced into : p_pc_3_BRB0 .
	Register(s) p_pc_30 has(ve) been backward balanced into : p_pc_30_BRB0 .
	Register(s) p_pc_31 has(ve) been backward balanced into : p_pc_31_BRB0 .
	Register(s) p_pc_4 has(ve) been backward balanced into : p_pc_4_BRB0 .
	Register(s) p_pc_5 has(ve) been backward balanced into : p_pc_5_BRB0 .
	Register(s) p_pc_6 has(ve) been backward balanced into : p_pc_6_BRB0 .
	Register(s) p_pc_7 has(ve) been backward balanced into : p_pc_7_BRB0 .
	Register(s) p_pc_8 has(ve) been backward balanced into : p_pc_8_BRB0 .
	Register(s) p_pc_9 has(ve) been backward balanced into : p_pc_9_BRB0 .
	Register(s) pc_0 has(ve) been backward balanced into : pc_0_BRB0 pc_0_BRB1 pc_0_BRB2 pc_0_BRB3.
	Register(s) pc_1 has(ve) been backward balanced into : pc_1_BRB0 pc_1_BRB3.
	Register(s) pc_10 has(ve) been backward balanced into : pc_10_BRB0 pc_10_BRB3.
	Register(s) pc_11 has(ve) been backward balanced into : pc_11_BRB0 pc_11_BRB3.
	Register(s) pc_12 has(ve) been backward balanced into : pc_12_BRB0 pc_12_BRB3.
	Register(s) pc_13 has(ve) been backward balanced into : pc_13_BRB0 pc_13_BRB3.
	Register(s) pc_14 has(ve) been backward balanced into : pc_14_BRB0 pc_14_BRB3.
	Register(s) pc_15 has(ve) been backward balanced into : pc_15_BRB0 pc_15_BRB3.
	Register(s) pc_16 has(ve) been backward balanced into : pc_16_BRB0 pc_16_BRB3.
	Register(s) pc_17 has(ve) been backward balanced into : pc_17_BRB0 pc_17_BRB3.
	Register(s) pc_18 has(ve) been backward balanced into : pc_18_BRB0 pc_18_BRB3.
	Register(s) pc_19 has(ve) been backward balanced into : pc_19_BRB0 pc_19_BRB3.
	Register(s) pc_2 has(ve) been backward balanced into : pc_2_BRB0 pc_2_BRB3.
	Register(s) pc_20 has(ve) been backward balanced into : pc_20_BRB0 pc_20_BRB3.
	Register(s) pc_21 has(ve) been backward balanced into : pc_21_BRB0 pc_21_BRB3.
	Register(s) pc_22 has(ve) been backward balanced into : pc_22_BRB0 pc_22_BRB3.
	Register(s) pc_23 has(ve) been backward balanced into : pc_23_BRB0 pc_23_BRB3.
	Register(s) pc_24 has(ve) been backward balanced into : pc_24_BRB0 pc_24_BRB3.
	Register(s) pc_25 has(ve) been backward balanced into : pc_25_BRB0 pc_25_BRB3.
	Register(s) pc_26 has(ve) been backward balanced into : pc_26_BRB0 pc_26_BRB3.
	Register(s) pc_27 has(ve) been backward balanced into : pc_27_BRB0 pc_27_BRB3.
	Register(s) pc_28 has(ve) been backward balanced into : pc_28_BRB0 pc_28_BRB3.
	Register(s) pc_29 has(ve) been backward balanced into : pc_29_BRB0 pc_29_BRB3.
	Register(s) pc_3 has(ve) been backward balanced into : pc_3_BRB0 pc_3_BRB3.
	Register(s) pc_30 has(ve) been backward balanced into : pc_30_BRB0 pc_30_BRB3.
	Register(s) pc_31 has(ve) been backward balanced into : pc_31_BRB0 pc_31_BRB3.
	Register(s) pc_4 has(ve) been backward balanced into : pc_4_BRB0 pc_4_BRB3.
	Register(s) pc_5 has(ve) been backward balanced into : pc_5_BRB0 pc_5_BRB3.
	Register(s) pc_6 has(ve) been backward balanced into : pc_6_BRB0 pc_6_BRB3.
	Register(s) pc_7 has(ve) been backward balanced into : pc_7_BRB0 pc_7_BRB3.
	Register(s) pc_8 has(ve) been backward balanced into : pc_8_BRB0 pc_8_BRB3.
	Register(s) pc_9 has(ve) been backward balanced into : pc_9_BRB0 pc_9_BRB3.
Unit <cpu_t/stage_if> processed.

Processing Unit <cpu_t/stage_ex> :
	Register(s) p_rf_waddr_4 p_rf_waddr_3 p_rf_waddr_2 forwardX_and0002_SW0_FRB has(ve) been forward balanced into : forwardX_and0002_FRB.
Unit <cpu_t/stage_ex> processed.

Processing Unit <arbiter_t/vga_t> :
	Register(s) fb_pointer_1 has(ve) been backward balanced into : fb_pointer_1_BRB0 fb_pointer_1_BRB1.
	Register(s) fb_pointer_10 has(ve) been backward balanced into : fb_pointer_10_BRB1.
	Register(s) fb_pointer_11 has(ve) been backward balanced into : fb_pointer_11_BRB1.
	Register(s) fb_pointer_12 has(ve) been backward balanced into : fb_pointer_12_BRB1.
	Register(s) fb_pointer_13 has(ve) been backward balanced into : fb_pointer_13_BRB1.
	Register(s) fb_pointer_14 has(ve) been backward balanced into : fb_pointer_14_BRB1.
	Register(s) fb_pointer_15 has(ve) been backward balanced into : fb_pointer_15_BRB1.
	Register(s) fb_pointer_16 has(ve) been backward balanced into : fb_pointer_16_BRB1.
	Register(s) fb_pointer_17 has(ve) been backward balanced into : fb_pointer_17_BRB1.
	Register(s) fb_pointer_18 has(ve) been backward balanced into : fb_pointer_18_BRB1.
	Register(s) fb_pointer_19 has(ve) been backward balanced into : fb_pointer_19_BRB1.
	Register(s) fb_pointer_2 has(ve) been backward balanced into : fb_pointer_2_BRB1.
	Register(s) fb_pointer_20 has(ve) been backward balanced into : fb_pointer_20_BRB1.
	Register(s) fb_pointer_21 has(ve) been backward balanced into : fb_pointer_21_BRB1.
	Register(s) fb_pointer_22 has(ve) been backward balanced into : fb_pointer_22_BRB1.
	Register(s) fb_pointer_23 has(ve) been backward balanced into : fb_pointer_23_BRB1.
	Register(s) fb_pointer_24 has(ve) been backward balanced into : fb_pointer_24_BRB1.
	Register(s) fb_pointer_25 has(ve) been backward balanced into : fb_pointer_25_BRB1.
	Register(s) fb_pointer_26 has(ve) been backward balanced into : fb_pointer_26_BRB1.
	Register(s) fb_pointer_27 has(ve) been backward balanced into : fb_pointer_27_BRB1.
	Register(s) fb_pointer_28 has(ve) been backward balanced into : fb_pointer_28_BRB1.
	Register(s) fb_pointer_29 has(ve) been backward balanced into : fb_pointer_29_BRB1.
	Register(s) fb_pointer_3 has(ve) been backward balanced into : fb_pointer_3_BRB1.
	Register(s) fb_pointer_30 has(ve) been backward balanced into : fb_pointer_30_BRB1.
	Register(s) fb_pointer_31 has(ve) been backward balanced into : fb_pointer_31_BRB1.
	Register(s) fb_pointer_4 has(ve) been backward balanced into : fb_pointer_4_BRB1.
	Register(s) fb_pointer_5 has(ve) been backward balanced into : fb_pointer_5_BRB1.
	Register(s) fb_pointer_6 has(ve) been backward balanced into : fb_pointer_6_BRB1.
	Register(s) fb_pointer_7 has(ve) been backward balanced into : fb_pointer_7_BRB1.
	Register(s) fb_pointer_8 has(ve) been backward balanced into : fb_pointer_8_BRB1.
	Register(s) fb_pointer_9 has(ve) been backward balanced into : fb_pointer_9_BRB1.
Unit <arbiter_t/vga_t> processed.
FlipFlop arbiter_t/vga_t/bypass/pos_2 has been replicated 1 time(s)
FlipFlop arbiter_t/vga_t/bypass/pos_3 has been replicated 1 time(s)
FlipFlop arbiter_t/vga_t/bypass/pos_4 has been replicated 1 time(s)
FlipFlop arbiter_t/vga_t/bypass/pos_5 has been replicated 1 time(s)
FlipFlop cpu_t/stage_if/pc_0_BRB1 has been replicated 1 time(s)
FlipFlop cpu_t/stage_if/pc_0_BRB2 has been replicated 1 time(s)
PACKER Warning: Lut Mcount_timer_eqn_311 is driving XOR and other loads hence can not be packed with the XOR/Carry. This would result in an extra LUT for a feedthrough.
PACKER Warning: Lut Mcount_timer_eqn_311 is driving XOR and other loads hence can not be packed with the XOR/Carry. This would result in an extra LUT for a feedthrough.

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 1111
 Flip-Flops                                            : 1111

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Final Report                               *
=========================================================================
Final Results
RTL Top Level Output File Name     : top.ngr
Top Level Output File Name         : top
Output Format                      : NGC
Optimization Goal                  : Speed
Keep Hierarchy                     : Yes

Design Statistics
# IOs                              : 92

Cell Usage :
# BELS                             : 5497
#      GND                         : 16
#      INV                         : 168
#      LUT1                        : 492
#      LUT2                        : 525
#      LUT2_D                      : 5
#      LUT2_L                      : 5
#      LUT3                        : 597
#      LUT3_D                      : 37
#      LUT3_L                      : 55
#      LUT4                        : 1503
#      LUT4_D                      : 55
#      LUT4_L                      : 147
#      MULT_AND                    : 10
#      MUXCY                       : 846
#      MUXF5                       : 279
#      MUXF6                       : 40
#      VCC                         : 21
#      XORCY                       : 696
# FlipFlops/Latches                : 1111
#      FD                          : 26
#      FD_1                        : 17
#      FDE                         : 535
#      FDE_1                       : 183
#      FDR                         : 229
#      FDR_1                       : 68
#      FDRE                        : 12
#      FDRE_1                      : 27
#      FDRS_1                      : 1
#      FDS_1                       : 1
#      FDSE                        : 12
# RAMS                             : 449
#      RAM16X1D                    : 448
#      RAMB16_S36_S36              : 1
# Clock Buffers                    : 2
#      BUFG                        : 1
#      BUFGP                       : 1
# IO Buffers                       : 91
#      IBUF                        : 11
#      IOBUF                       : 16
#      OBUF                        : 64
# MULTs                            : 1
#      MULT18X18SIO                : 1
=========================================================================
PACKER Warning: Lut Mcount_timer_eqn_311 is driving XOR and other loads hence can not be packed with the XOR/Carry. This would result in an extra LUT for a feedthrough.

Device utilization summary:
---------------------------

Selected Device : 3s1200efg320-4 

 Number of Slices:                     2103  out of   8672    24%  
 Number of Slice Flip Flops:           1111  out of  17344     6%  
 Number of 4 input LUTs:               4485  out of  17344    25%  
    Number used as logic:              3589
    Number used as RAMs:                896
 Number of IOs:                          92
 Number of bonded IOBs:                  92  out of    250    36%  
 Number of BRAMs:                         1  out of     28     3%  
 Number of MULT18X18SIOs:                 1  out of     28     3%  
 Number of GCLKs:                         2  out of     24     8%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
TIMING REPORT

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-----------------------------------+------------------------+-------+
Clock Signal                       | Clock buffer(FF name)  | Load  |
-----------------------------------+------------------------+-------+
clk                                | BUFGP                  | 1     |
c_t/count                          | BUFG                   | 1560  |
-----------------------------------+------------------------+-------+

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -4

   Minimum period: 21.058ns (Maximum Frequency: 47.487MHz)
   Minimum input arrival time before clock: 18.139ns
   Maximum output required time after clock: 14.519ns
   Maximum combinational path delay: 10.135ns

Timing Detail:
--------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk'
  Clock period: 1.949ns (frequency: 513.084MHz)
  Total number of paths / destination ports: 1 / 1
-------------------------------------------------------------------------
Delay:               1.949ns (Levels of Logic = 0)
  Source:            c_t/count (FF)
  Destination:       c_t/count (FF)
  Source Clock:      clk rising
  Destination Clock: clk rising

  Data Path: c_t/count to c_t/count
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDR:C->Q              2   0.591   0.447  count (count)
     FDR:R                     0.911          count
    ----------------------------------------
    Total                      1.949ns (1.502ns logic, 0.447ns route)
                                       (77.1% logic, 22.9% route)

=========================================================================
Timing constraint: Default period analysis for Clock 'c_t/count'
  Clock period: 21.058ns (frequency: 47.487MHz)
  Total number of paths / destination ports: 30927018 / 6635
-------------------------------------------------------------------------
Delay:               10.529ns (Levels of Logic = 9)
  Source:            cpu_t/stage_if/pc_0_BRB2 (FF)
  Destination:       arbiter_t/ram_t/idata_0 (FF)
  Source Clock:      c_t/count rising
  Destination Clock: c_t/count falling

  Data Path: cpu_t/stage_if/pc_0_BRB2 to arbiter_t/ram_t/idata_0
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDE:C->Q             31   0.591   1.297  pc_0_BRB2 (pc_0_BRB2)
     LUT4:I2->O            6   0.704   0.673  pc_mux0000<2> (imem_addr<29>)
     end scope: 'stage_if'
     end scope: 'cpu_t'
     begin scope: 'arbiter_t'
     begin scope: 'imm'
     LUT4:I3->O            1   0.704   0.424  mod<2>2_SW1 (N9)
     LUT4_D:I3->O          2   0.704   0.526  mod<2>31 (N13)
     LUT2:I1->O            2   0.704   0.526  mod<3> (mod<3>)
     end scope: 'imm'
     LUT4:I1->O            2   0.704   0.451  mod1_ie1 (mod1_ie)
     begin scope: 'ram_t'
     LUT4:I3->O           32   0.704   1.262  idata_and0000 (idata_and0000)
     FDE_1:CE                  0.555          idata_0
    ----------------------------------------
    Total                     10.529ns (5.370ns logic, 5.159ns route)
                                       (51.0% logic, 49.0% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'c_t/count'
  Total number of paths / destination ports: 91150 / 1115
-------------------------------------------------------------------------
Offset:              18.139ns (Levels of Logic = 18)
  Source:            rst (PAD)
  Destination:       arbiter_t/vga_t/vga/vcount_0 (FF)
  Destination Clock: c_t/count falling

  Data Path: rst to arbiter_t/vga_t/vga/vcount_0
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O           496   1.218   1.584  rst_IBUF (rst_IBUF)
     begin scope: 'arbiter_t'
     begin scope: 'vga_t'
     begin scope: 'vga'
     LUT2:I0->O            1   0.704   0.000  Madd__old_hcounter_5_lut<0> (Madd__old_hcounter_5_lut<0>)
     MUXCY:S->O            1   0.464   0.000  Madd__old_hcounter_5_cy<0> (Madd__old_hcounter_5_cy<0>)
     XORCY:CI->O           3   0.804   0.610  Madd__old_hcounter_5_xor<1> (_old_hcounter_6<1>_norst)
     LUT2_L:I1->LO         1   0.704   0.104  old_hcounter_6_cmp_eq00003 (old_hcounter_6_cmp_eq00003)
     LUT4:I3->O            1   0.704   0.424  old_hcounter_6_cmp_eq000013 (old_hcounter_6_cmp_eq000013)
     LUT4_L:I3->LO         1   0.704   0.104  old_hcounter_6_cmp_eq000036_SW0 (N18)
     LUT4:I3->O           41   0.704   1.269  old_hcounter_6_cmp_eq000036 (old_hcounter_6_cmp_eq0000)
     LUT4_D:I3->O         21   0.704   1.132  _old_vcounter_7<0>1 (N9)
     LUT4:I3->O            3   0.704   0.610  _old_vcounter_7<1>1 (_old_vcounter_7<1>)
     LUT4:I1->O            1   0.704   0.000  Mcompar_vcount_cmp_ge0000_lut<0> (Mcompar_vcount_cmp_ge0000_lut<0>)
     MUXCY:S->O            1   0.464   0.000  Mcompar_vcount_cmp_ge0000_cy<0> (Mcompar_vcount_cmp_ge0000_cy<0>)
     MUXCY:CI->O           1   0.059   0.000  Mcompar_vcount_cmp_ge0000_cy<1> (Mcompar_vcount_cmp_ge0000_cy<1>)
     MUXCY:CI->O           1   0.059   0.000  Mcompar_vcount_cmp_ge0000_cy<2> (Mcompar_vcount_cmp_ge0000_cy<2>)
     MUXCY:CI->O           1   0.459   0.595  Mcompar_vcount_cmp_ge0000_cy<3> (vcount_cmp_ge0000)
     LUT2:I0->O           11   0.704   0.933  vcount_not00011 (vcount_not0001)
     FDR_1:R                   0.911          vcount_0
    ----------------------------------------
    Total                     18.139ns (10.774ns logic, 7.365ns route)
                                       (59.4% logic, 40.6% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'c_t/count'
  Total number of paths / destination ports: 7320 / 73
-------------------------------------------------------------------------
Offset:              14.519ns (Levels of Logic = 14)
  Source:            cpu_t/stage_ex/p_alu_r_25 (FF)
  Destination:       mod_sram_data<15> (PAD)
  Source Clock:      c_t/count rising

  Data Path: cpu_t/stage_ex/p_alu_r_25 to mod_sram_data<15>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDE:C->Q             14   0.591   1.175  p_alu_r_25 (p_alu_r_25)
     end scope: 'stage_ex'
     begin scope: 'stage_mem'
     end scope: 'stage_mem'
     end scope: 'cpu_t'
     begin scope: 'arbiter_t'
     begin scope: 'dmm'
     LUT2_D:I0->LO         1   0.704   0.104  mod<2>2_SW0 (N42)
     LUT4:I3->O            1   0.704   0.424  mod<2>2 (N5)
     LUT4:I3->O           56   0.704   1.274  mod<0>93 (mod<0>)
     end scope: 'dmm'
     LUT4:I3->O            3   0.704   0.706  mod1_de1 (mod1_de)
     begin scope: 'ram_t'
     LUT3:I0->O            1   0.704   0.424  eff_drw_SW0_SW0 (N89)
     LUT4:I3->O            4   0.704   0.587  eff_drw (eff_drw)
     begin scope: 'sram'
     INV:I->O             16   0.704   1.034  drw_inv1_INV_0 (drw_inv)
     IOBUF:T->IO               3.272          sram_data_15_IOBUF (sram_data<15>)
     end scope: 'sram'
     end scope: 'ram_t'
     end scope: 'arbiter_t'
    ----------------------------------------
    Total                     14.519ns (8.791ns logic, 5.728ns route)
                                       (60.5% logic, 39.5% route)

=========================================================================
Timing constraint: Default path analysis
  Total number of paths / destination ports: 18 / 18
-------------------------------------------------------------------------
Delay:               10.135ns (Levels of Logic = 8)
  Source:            rst (PAD)
  Destination:       mod_sram_data<15> (PAD)

  Data Path: rst to mod_sram_data<15>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O           496   1.218   1.488  rst_IBUF (rst_IBUF)
     begin scope: 'arbiter_t'
     begin scope: 'ram_t'
     LUT3:I1->O            1   0.704   0.424  eff_drw_SW0_SW0 (N89)
     LUT4:I3->O            4   0.704   0.587  eff_drw (eff_drw)
     begin scope: 'sram'
     INV:I->O             16   0.704   1.034  drw_inv1_INV_0 (drw_inv)
     IOBUF:T->IO               3.272          sram_data_15_IOBUF (sram_data<15>)
     end scope: 'sram'
     end scope: 'ram_t'
     end scope: 'arbiter_t'
    ----------------------------------------
    Total                     10.135ns (6.602ns logic, 3.533ns route)
                                       (65.1% logic, 34.9% route)

=========================================================================


Total REAL time to Xst completion: 70.00 secs
Total CPU time to Xst completion: 70.18 secs
 
--> 


Total memory usage is 451296 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :   77 (   0 filtered)
Number of infos    :   80 (   0 filtered)

